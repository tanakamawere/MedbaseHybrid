@page "/courses"
@using MedbaseLibrary.Models
@using MedbaseLibrary.Services
@inject IApiRepository repository
@inject NavigationManager navMananger;

<PageTitle>Courses</PageTitle>
<div class="container">

    <MudBreadcrumbs Items="_items"></MudBreadcrumbs>

    @if (!CoursesList.Any())
    {
        <LoadingComponent />
    }
    else
    {
        <div class="row pt-5">
            @foreach (Course item in CoursesList)
            {
                <div class="col-6 col-lg-4 col-sm-6 mb-5">
                    <MudCard @onclick="() => GoToTopics(item.CourseRef)">
                        <MudCardMedia Image="@item.ImageURL" Height="100" />
                        <MudCardContent>
                            <MudText Typo="Typo.h6">
                                @item.Title
                            </MudText>
                            <MudText Typo="Typo.body2" Class="d-lg-block d-none">
                                @item.Description
                            </MudText>
                        </MudCardContent>
                    </MudCard>
                </div>

            }
        </div>
        
    }
</div>

@code {
    private IEnumerable<Course> CoursesList { get; set; } = Enumerable.Empty<Course>();

    private List<BreadcrumbItem> _items = new List<BreadcrumbItem>
    {
        new BreadcrumbItem("Home", href: "#", icon: Icons.Material.Filled.Home),
        new BreadcrumbItem("Courses", href: "/courses", icon: Icons.Material.Filled.Book)
    };

    protected override Task OnInitializedAsync() => GetArticlesAsync();

    private async Task GetArticlesAsync() => CoursesList = await repository.GetCourses();
    private void GoToTopics(string courseRef)
    {
        navMananger.NavigateTo($"/topics/{courseRef}");
    }
}
