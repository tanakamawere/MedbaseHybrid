@page "/articles"
@inject IApiRepository repository

<!-- Header-->
<header class="py-5 medbase-font background-state">
    <div class="container px-5">
        <div class="row gx-5 align-items-center justify-content-center">
            <div class="col-lg-8 col-xl-4 col-xxl-4">
                <div class="my-5 text-center text-xl-start">
                    <MudText Typo="Typo.h2" class="display-5 fw-bolder mb-2 text-light">
                        Articles🥸
                    </MudText>
                    <MudText class="text-light fw-normal mb-4">
                        Welcome to our Articles.
                        New articles every <em>Monday at 6pm</em>, touching on topics like psychology, money, studying and book reviews.
                    </MudText>
                </div>
            </div>
            <div class="col-xl-8 col-xxl-8 text-center">
                <img class="img-fluid rounded-3 my-5"
                     src="img/article.svg" alt="..." />
            </div>
        </div>
    </div>
</header>
<div class="container">

    <div class="row gx-5">
        @foreach (Article item in allArticles.Reverse())
        {
            <div class="col-lg-4 mb-5">
                <div class="card h-100 shadow border-0">
                    <img class="card-img-top" src="@item.ImageURL" alt="..." />
                    <div class="card-body p-4">
                        <a class="text-decoration-none link-dark stretched-link" href="@($"/article/{item.Id}")">
                            <h5 class="card-title mb-3">
                                @item.Title
                            </h5>
                        </a>
                        <p class="card-text mb-0">
                            @item.Summary
                        </p>
                    </div>
                    <div class="card-footer p-4 pt-0 bg-transparent border-top-0">
                        <div class="d-flex align-items-end justify-content-between">
                            <div class="d-flex align-items-center">
                                <div class="small">
                                    <div class="fw-bold">@item.Writer</div>
                                    <div class="text-muted">
                                        @item.DatePosted.ToString("dddd, dd MMMM yyyy")
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@code {
    public IEnumerable<Article> allArticles { get; set; } = Enumerable.Empty<Article>();

    protected async override Task OnInitializedAsync() => await UpdatePage();

    private async Task UpdatePage()
    {
        allArticles = await repository.GetArticles();
    }
}

