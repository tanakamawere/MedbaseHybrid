@page "/"
@page "/home"
@using MedbaseLibrary.Models;
@using MedbaseLibrary.Services;
@inject NavigationManager navManager;
@inject IApiRepository repository

<div class="container flow">
    <Courses />
</div>

<section class="container">
    <div class="row gx-5 mt-5 justify-content-center">
        <div class="col-lg-8 col-xl-6">
            <div class="text-center">
                <MudText class="fw-bolder" Typo="Typo.h5">From our blog</MudText>
                <MudText class="lead fw-normal mb-5" Typo="Typo.h6">
                    A few bits & bobs on medical school and the likes
                </MudText>
            </div>
        </div>
    </div>

    <div class="row gx-5">
        @foreach (Article item in Articles)
        {
            <div class="col-lg-4 mb-5">
                <MudCard @onclick="() => GoToArticle(item.Id)">
                    <MudCardMedia Height="300" Image="@item.ImageURL" alt="..." />
                    <MudCardContent class="card-body p-4">
                        <h5 class="card-title mb-3">
                            @item.Title
                        </h5>
                        <p class="mb-0">
                            @item.Summary
                        </p>
                        <MudDivider/>
                        <div class="small">
                            <MudText Typo="Typo.subtitle2" class="fw-bold">@item.Writer</MudText>
                            <MudText Typo="Typo.caption">
                                @item.DatePosted.ToString("dddd, dd MMMM yyyy")
                            </MudText>
                        </div>
                    </MudCardContent>
                </MudCard>
            </div>
        }
    </div>
</section>

@code{
    private IEnumerable<Article> Articles { get; set; } = Enumerable.Empty<Article>();

    protected override Task OnInitializedAsync() => GetArticlesAsync();

    private async Task GetArticlesAsync() => Articles = await repository.GetArticlesNumbered(3);

    private void GoToArticle(int article)
    {
        Console.WriteLine(navManager.BaseUri.ToString());
        navManager.NavigateTo($"/article/{article}");
    }
}