@page "/courses"
@using MedbaseHybrid.Services;
@inject IApiRepository repository

@if (Helpers.InternetAvailable())
{
    <div class="container">
        @if (!CoursesList.Any())
        {
            <LoadingComponent />
        }
        else
        {
            <div class="media-scroller spans-inline">
                @foreach (Course item in CoursesList)
                {
                    <div class="media-element">
                        <div class="card h-100 shadow border-0">
                            <img class="card-img-top dashboard-image" src="@item.ImageURL" alt="..." />
                            <div class="card-body p-4">
                                <a class="text-decoration-none link-dark stretched-link" href="@($"topics/{item.CourseRef}")">
                                    <h5 class="card-title mb-3">
                                        @item.Title
                                    </h5>
                                    <div class="d-flex align-items-center">
                                        <div class="small">
                                            <div class="text-muted">
                                                @item.Description
                                            </div>
                                        </div>
                                    </div>
                                </a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
}


@code {
    private IEnumerable<Course> CoursesList { get; set; } = Enumerable.Empty<Course>();

    protected override Task OnInitializedAsync() => GetHomeDetailsAsync();

    private async Task GetHomeDetailsAsync()
    {
        if (Helpers.InternetAvailable())
            CoursesList = await repository.GetCourses();
    }
}
