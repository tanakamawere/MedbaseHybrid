@page "/courses"
@inject IApiRepository repository

<div class="text-start text-xl-start">
    <h6 class="display-5 fw-bolder text-dark mb-2">Courses🎩</h6>
</div>
<div class="media-scroller spans-inline">
    @if (!CoursesList.Any())
    {
        <div class="text-center">
            <div class="spinner-border" style="width: 3rem; height: 3rem;" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else
    {
        @foreach (Course item in CoursesList)
        {
            <div class="media-element">
                <div class="card h-100 shadow border-0">
                    <img class="card-img-top dashboard-image" src="@item.ImageURL" alt="..." />
                    <div class="card-body p-4">
                        <a class="text-decoration-none link-dark stretched-link" href="@($"topics/{item.CourseRef}")">
                            <h5 class="card-title mb-3">
                                @item.Title
                            </h5>
                            <div class="d-flex align-items-center">
                                <div class="small">
                                    <div class="text-muted">
                                        @item.Description
                                    </div>
                                </div>
                            </div>
                        </a>
                    </div>
                </div>
            </div>
        }
    }
</div>


@code {
    private IEnumerable<Course> CoursesList { get; set; } = Enumerable.Empty<Course>();

    protected override Task OnInitializedAsync() => GetHomeDetailsAsync();

    private async Task GetHomeDetailsAsync()
    { 
        CoursesList = await repository.GetCourses();
    }
}
