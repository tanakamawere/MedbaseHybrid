@page "/courses"
@using MedbaseHybrid.Services;
@inject IApiRepository repository

<div class="container">
    <div class="fixed-top">
        <TopNavBar>
            <div class="container-fluid">
                <span class="navbar-brand text-white mb-0 h1">Courses</span>
            </div>
        </TopNavBar>
    </div>

    @if (Helpers.InternetAvailable())
    {
        @if (!CoursesList.Any())
        {
            <LoadingComponent />
        }
        else
        {
            <div class="row pt-5">
                @foreach (Course item in CoursesList)
                {
                    <div class="col-6 col-lg-4 mb-5">
                        <div class="card h-100 shadow border-0">
                            <img class="card-img-top" src="@item.ImageURL" alt="..." />
                            <div class="card-body p-4">
                                <a class="text-decoration-none stretched-link" href="@($"/topics/{item.CourseRef}")">
                                    <h6 class="card-title mb-3">
                                        @item.Title
                                    </h6>
                                </a>
                                <p class="card-text mb-0 d-lg-block d-none fw-light fst-normal">
                                    @item.Description
                                </p>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    }

    <div class="fixed-bottom">
        <BottomTabs />
    </div>
</div>


@code {
    private IEnumerable<Course> CoursesList { get; set; } = Enumerable.Empty<Course>();

    protected override Task OnInitializedAsync() => GetHomeDetailsAsync();

    private async Task GetHomeDetailsAsync()
    {
        if (Helpers.InternetAvailable())
            CoursesList = await repository.GetCourses();
    }
}
