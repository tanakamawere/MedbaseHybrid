@page "/courses"
@page "/dashboard"
@using MedbaseHybrid.Services;
@inject IApiRepository repository
@inject NavigationManager navMananger;

<div class="container mb-5">
    <div class="fixed-top">
        <TopNavBar>
            <div class="container-fluid">
                <span class="navbar-brand text-white mb-0 h1">Dashboard</span>
            </div>
        </TopNavBar>
    </div>

    @if (Helpers.InternetAvailable())
    {
        @if (!CoursesList.Any())
        {
            <LoadingComponent />
        }
        else
        {
            <MudText Typo="Typo.h5" Class="fw-bolder mb-1">Articles</MudText>
            <Articles />

            <MudText Typo="Typo.h5" Class="fw-bolder mb-1 mt-1">Courses</MudText>
            <div class="row">
                @foreach (Course item in CoursesList)
                {
                    <div class="col-6 col-lg-4 mb-5">
                        <MudCard @onclick="() => GoToTopics(item.CourseRef)">
                            <MudCardMedia Image="@item.ImageURL" Height="100"/>
                            <MudCardContent>
                                <MudCardContent>
                                    <MudText Typo="Typo.h6">
                                        @item.Title
                                    </MudText>
                                    <MudText Typo="Typo.body2" Class="d-lg-block d-none">
                                        @item.Description
                                    </MudText>
                                </MudCardContent>
                            </MudCardContent>
                        </MudCard>
                    </div>
                }
            </div>
        }
    }
</div>


@code {
    private IEnumerable<Course> CoursesList { get; set; } = Enumerable.Empty<Course>();

    protected override Task OnInitializedAsync() => GetHomeDetailsAsync();

    private async Task GetHomeDetailsAsync()
    {
        if (Helpers.InternetAvailable())
            CoursesList = await repository.GetCourses();
    }

    private void GoToTopics(string courseRef)
    {
        navMananger.NavigateTo($"/topics/{courseRef}");
    }
}
