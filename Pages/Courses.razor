@page "/courses"
@using MedbaseHybrid.Services;
@inject IApiRepository repository

<div class="container">
    <div class="fixed-top">
        <TopNavBar>
            <div class="container-fluid">
                <span class="navbar-brand text-white mb-0 h1">Courses</span>
            </div>
        </TopNavBar>
    </div>

    @if (Helpers.InternetAvailable())
    {
        @if (!CoursesList.Any())
        {
            <LoadingComponent />
        }
        else
        {
            @foreach (Course item in CoursesList)
            {
                <div class="mt-5">
                    <div class="card h-100 shadow border-0 mb-2">
                        <img class="card-img-top dashboard-image" src="@item.ImageURL" alt="..." />
                        <div class="card-body p-4">
                            <a class="text-decoration-none link-dark stretched-link" href="@($"topics/{item.CourseRef}")">
                                <h5 class="card-title mb-3">
                                    @item.Title
                                </h5>
                                <div class="d-flex align-items-center">
                                    <div class="small">
                                        <div class="text-muted">
                                            @item.Description
                                        </div>
                                    </div>
                                </div>
                            </a>
                        </div>
                    </div>
                </div>
            }
        }
    }
</div>

<div class="fixed-bottom">
    <BottomTabs />
</div>


@code {
    private IEnumerable<Course> CoursesList { get; set; } = Enumerable.Empty<Course>();

    protected override Task OnInitializedAsync() => GetHomeDetailsAsync();

    private async Task GetHomeDetailsAsync()
    {
        if (Helpers.InternetAvailable())
            CoursesList = await repository.GetCourses();
    }
}
