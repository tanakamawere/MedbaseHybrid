@page "/articles"
@inject IApiRepository repository

<div class="container">

    <div class="text-start text-xl-start">
        <h6 class="display-5 fw-bolder text-dark mb-2">Articles</h6>
    </div>
    <div class="row gx-5">
        @if (!allArticles.Any())
        {
                <div class="text-center">
                    <div class="spinner-border" style="width: 3rem; height: 3rem;" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
                    <span class="visible">Loading your articles, please wait a bit...</span>
        }
        else
        {
            @foreach (Article item in allArticles.Reverse())
            {
                    <div class="col-lg-4 mb-5">
                        <div class="card h-100 shadow border-0">
                            <img class="card-img-top" src="@item.ImageURL" alt="..." />
                            <div class="card-body p-4">
                                <a class="text-decoration-none link-dark stretched-link" href="@($"https://medbase.co.zw/article/{item.Id}")">
                                    <h5 class="card-title mb-3">
                                    @item.Title
                                </h5>
                                <div class="d-flex align-items-center">
                                    <div class="small">
                                        <div class="text-muted">
                                            @item.DatePosted.ToString("dddd, dd MMMM yyyy")
                                        </div>
                                    </div>
                                </div>
                                </a>
                            </div>
                        </div>
                    </div>
            }
        }
    </div>
</div>

@code {
    public IEnumerable<Article> allArticles { get; set; } = Enumerable.Empty<Article>();

    protected async override Task OnInitializedAsync() => await UpdatePage();

    private async Task UpdatePage()
    {
        allArticles = await repository.GetArticles();
    }
}